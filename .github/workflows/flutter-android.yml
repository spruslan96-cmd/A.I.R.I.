name: Flutter Build APK

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      FLUTTER_DISABLE_ANALYTICS: true
      DART_DISABLE_ANALYTICS: true

    steps:
      # 1️⃣ Клонируем проект
      - name: Checkout code
        uses: actions/checkout@v4

      # 2️⃣ Устанавливаем JDK 17
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      # 3️⃣ Устанавливаем Flutter 3.35.3
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.35.3"
          channel: "stable"

      # 4️⃣ Кэшируем Flutter и Gradle для ускорения билдов
      - name: Cache Flutter & Gradle
        uses: actions/cache@v3
        with:
          path: |
            ~/.pub-cache
            ~/.gradle
          key: ${{ runner.os }}-flutter-${{ hashFiles('**/pubspec.yaml') }}

      # 5️⃣ Устанавливаем Android SDK, NDK и CMake
      - name: Set up Android SDK
        uses: android-actions/setup-android@v3
        with:
          api-level: 33
          build-tools: 33.0.2
          ndk: 25.1.8937393
          cmake: 3.22.1

      # 6️⃣ Чистим предыдущие сборки и кэш CMake/NDK
      - name: Clean previous builds and CMake
        run: |
          flutter clean
          rm -rf android/.cxx
          rm -rf $HOME/.gradle/caches

      # 7️⃣ Устанавливаем зависимости Flutter
      - name: Install dependencies
        run: flutter pub get

      # 8️⃣ Загружаем исходники llama.cpp автоматически
      - name: Download llama.cpp
        run: |
          echo "Создаём папку для llama.cpp"
          mkdir -p ${{ github.workspace }}/llama.cpp
          git clone --depth 1 https://github.com/ggerganov/llama.cpp.git ${{ github.workspace }}/llama.cpp
          echo "Копируем в pub-cache для llama_cpp_dart"
          mkdir -p ${{ github.workspace }}/.pub-cache/hosted/pub.dev/llama_cpp_dart-0.1.0/src/llama.cpp
          cp -r ${{ github.workspace }}/llama.cpp/* ${{ github.workspace }}/.pub-cache/hosted/pub.dev/llama_cpp_dart-0.1.0/src/llama.cpp/

      # 9️⃣ Сборка APK под ARM64 с отключением VFS watch
      - name: Build APK
        run: |
          echo "org.gradle.vfs.watch=false" >> android/gradle.properties
          flutter build apk --release --target-platform android-arm64 --verbose --no-tree-shake-icons --android-gradle-daemon=false

      # 🔟 Загружаем собранный APK
      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-release
          path: build/app/outputs/flutter-apk/app-release.apk
